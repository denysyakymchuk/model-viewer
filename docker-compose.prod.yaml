version: "2.0"
services:
  postgres_db:
    container_name: databasePostGres
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app-network

  django-backend-modelviewer:
    build: ./backend-django
    restart: always
    container_name: django-backend-modelviewer
    command: >
      sh -c "cd backend-django && 
      ls &&
      cd backend_django &&
      ls &&
      python manage.py migrate &&
      python manage.py makesuperuser &&
      python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - postgres_db
    networks:
      - app-network

  frontend-vue-js:
    stdin_open: true
    restart: unless-stopped
    container_name: frontend-vue-js
    build:
      context: ./vue
      dockerfile: Dockerfile.prod
      args:
        - VUE_APP_CLIENT_ID=${VUE_APP_CLIENT_ID}
    environment:
      - VUE_APP_CLIENT_ID=${VUE_APP_CLIENT_ID}
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx-viewer
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - django-backend-modelviewer
      - frontend-vue-js
      - postgres_db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-viewer:
    external: true
